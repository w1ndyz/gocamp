// Code generated by entc, DO NOT EDIT.

package ent

import (
	"book/internal/data/ent/greeter"
	"book/internal/data/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	greeterFields := schema.Greeter{}.Fields()
	_ = greeterFields
	// greeterDescName is the schema descriptor for name field.
	greeterDescName := greeterFields[1].Descriptor()
	// greeter.DefaultName holds the default value on creation for the name field.
	greeter.DefaultName = greeterDescName.Default.(string)
	// greeterDescCreatedAt is the schema descriptor for created_at field.
	greeterDescCreatedAt := greeterFields[3].Descriptor()
	// greeter.DefaultCreatedAt holds the default value on creation for the created_at field.
	greeter.DefaultCreatedAt = greeterDescCreatedAt.Default.(func() time.Time)
	// greeterDescUpdatedAt is the schema descriptor for updated_at field.
	greeterDescUpdatedAt := greeterFields[4].Descriptor()
	// greeter.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	greeter.DefaultUpdatedAt = greeterDescUpdatedAt.Default.(func() time.Time)
}
